<hr style="margin-top: 3rem;">
<div class="container">
    <footer class="py-3">
        <div class="row">
            <div class="col-6 col-md-2 mb-3">
                <h5>Section</h5>
                <ul class="nav flex-column">
                    <li class="nav-item mb-2"><a href="#" class="nav-link p-0 text-muted">Home</a></li>
                    <li class="nav-item mb-2"><a href="#" class="nav-link p-0 text-muted">Features</a></li>
                    <li class="nav-item mb-2"><a href="#" class="nav-link p-0 text-muted">Pricing</a></li>
                    <li class="nav-item mb-2"><a href="#" class="nav-link p-0 text-muted">FAQs</a></li>
                    <li class="nav-item mb-2"><a href="#" class="nav-link p-0 text-muted">About</a></li>
                </ul>
            </div>

            <div class="col-6 col-md-2 mb-3">
                <h5>Section</h5>
                <ul class="nav flex-column">
                    <li class="nav-item mb-2"><a href="#" class="nav-link p-0 text-muted">Home</a></li>
                    <li class="nav-item mb-2"><a href="#" class="nav-link p-0 text-muted">Features</a></li>
                    <li class="nav-item mb-2"><a href="#" class="nav-link p-0 text-muted">Pricing</a></li>
                    <li class="nav-item mb-2"><a href="#" class="nav-link p-0 text-muted">FAQs</a></li>
                    <li class="nav-item mb-2"><a href="#" class="nav-link p-0 text-muted">About</a></li>
                </ul>
            </div>

            <div class="col-6 col-md-2 mb-3">
                <h5>Section</h5>
                <ul class="nav flex-column">
                    <li class="nav-item mb-2"><a href="#" class="nav-link p-0 text-muted">Home</a></li>
                    <li class="nav-item mb-2"><a href="#" class="nav-link p-0 text-muted">Features</a></li>
                    <li class="nav-item mb-2"><a href="#" class="nav-link p-0 text-muted">Pricing</a></li>
                    <li class="nav-item mb-2"><a href="#" class="nav-link p-0 text-muted">FAQs</a></li>
                    <li class="nav-item mb-2"><a href="#" class="nav-link p-0 text-muted">About</a></li>
                </ul>
            </div>

            <div class="col-md-5 offset-md-1 mb-3">
                <form>
                    <h5>Subscribe to our newsletter</h5>
                    <p>Monthly digest of what's new and exciting from us.</p>
                    <div class="d-flex flex-column flex-sm-row w-100 gap-2">
                        <label for="newsletter1" class="visually-hidden">Email address</label>
                        <input id="newsletter1" type="text" class="form-control" placeholder="Email address">
                        <button class="btn btn-primary" type="button">Subscribe</button>
                    </div>
                </form>
            </div>
        </div>

        <div class="d-flex flex-column flex-sm-row justify-content-between border-top">
            <p style="margin-top: 1rem">&copy; 2022 Company, Inc. All rights reserved.</p>
            <ul class="list-unstyled d-flex">
                <li class="ms-3"><a class="link-dark" href="#">
                        <svg class="bi" width="24" height="24">
                            <use xlink:href="#twitter"/>
                        </svg>
                    </a></li>
                <li class="ms-3"><a class="link-dark" href="#">
                        <svg class="bi" width="24" height="24">
                            <use xlink:href="#instagram"/>
                        </svg>
                    </a></li>
                <li class="ms-3"><a class="link-dark" href="#">
                        <svg class="bi" width="24" height="24">
                            <use xlink:href="#facebook"/>
                        </svg>
                    </a></li>
            </ul>
        </div>
    </footer>
</div>
<script>
	(() => {
		'use strict'
		const forms = document.querySelectorAll('.needs-validation')
		Array.from(forms).forEach(form => {
			form.addEventListener('submit', event => {
				if (!form.checkValidity()) {
					event.preventDefault()
					event.stopPropagation()
				}
				form.classList.add('was-validated')
			}, false)
		})
	})()
</script>
<script>
	let latitude = "<%= latitude %>";
	let longitude = "<%= longitude %>";

	function initMap() {

		// CODE FOR MAP INITIALIZATION
		const map = new google.maps.Map(
			document.getElementById("map"), {
				zoom: 17.50,
				center: {
					lat: parseFloat(latitude),
					lng: parseFloat(longitude)
				},
				styles: [
					{elementType: "geometry", stylers: [{color: "#242f3e"}]},
					{elementType: "labels.text.stroke", stylers: [{color: "#242f3e"}]},
					{elementType: "labels.text.fill", stylers: [{color: "#746855"}]},
					{
						featureType: "administrative.locality",
						elementType: "labels.text.fill",
						stylers: [{color: "#d59563"}],
					},
					{
						featureType: "poi",
						elementType: "labels.text.fill",
						stylers: [{color: "#d59563"}],
					},
					{
						featureType: "poi.park",
						elementType: "geometry",
						stylers: [{color: "#263c3f"}],
					},
					{
						featureType: "poi.park",
						elementType: "labels.text.fill",
						stylers: [{color: "#6b9a76"}],
					},
					{
						featureType: "road",
						elementType: "geometry",
						stylers: [{color: "#38414e"}],
					},
					{
						featureType: "road",
						elementType: "geometry.stroke",
						stylers: [{color: "#212a37"}],
					},
					{
						featureType: "road",
						elementType: "labels.text.fill",
						stylers: [{color: "#9ca5b3"}],
					},
					{
						featureType: "road.highway",
						elementType: "geometry",
						stylers: [{color: "#746855"}],
					},
					{
						featureType: "road.highway",
						elementType: "geometry.stroke",
						stylers: [{color: "#1f2835"}],
					},
					{
						featureType: "road.highway",
						elementType: "labels.text.fill",
						stylers: [{color: "#f3d19c"}],
					},
					{
						featureType: "transit",
						elementType: "geometry",
						stylers: [{color: "#2f3948"}],
					},
					{
						featureType: "transit.station",
						elementType: "labels.text.fill",
						stylers: [{color: "#d59563"}],
					},
					{
						featureType: "water",
						elementType: "geometry",
						stylers: [{color: "#17263c"}],
					},
					{
						featureType: "water",
						elementType: "labels.text.fill",
						stylers: [{color: "#515c6d"}],
					},
					{
						featureType: "water",
						elementType: "labels.text.stroke",
						stylers: [{color: "#17263c"}],
					},
				],
			});




		const marker = new google.maps.Marker({
			position: {
				lat: parseFloat(latitude),
				lng: parseFloat(longitude)
			},
			map,
			title: "Hare Krishna",
			icon: "https://manish-mahesh-talreja-bucket.s3.us-west-1.amazonaws.com/smiley-map.png"
		});
        if (listingDetails != null) {
			const contentString = `
		<div id="content">
			<div id="siteNotice"></div>
			<h1 id="firstHeading" class="firstHeading">${listingDetails.title}</h1>
			<div id="bodyContent">
				<p><b>${listingDetails.price}</b>, ${listingDetails.description}</p>
			</div>
		</div>
`;
			const infoWindow = new google.maps.InfoWindow({
				content: contentString,
				ariaLabel: listingDetails.title,
			});

			marker.addListener("click", () => {
				infoWindow.open({
					anchor: marker,
					map,
				});
			});
		}


	}
</script>
<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.bundle.min.js" integrity="sha384-YvpcrYf0tY3lHB60NNkmXc5s9fDVZLESaAA55NDzOxhy9GkcIdslK1eN7N6jIeHz" crossorigin="anonymous"></script>
<script src="https://maps.googleapis.com/maps/api/js?key=<%= googleMapsAPIKey %>&libraries=places&callback=initMap"></script>
<script type="text/javascript" src="https://cdn.jsdelivr.net/npm/toastify-js"></script>
<script src="https://cdn.jsdelivr.net/npm/@popperjs/core@2.11.8/dist/umd/popper.min.js"
        integrity="sha384-I7E8VVD/ismYTF4hNIPjVp/Zjvgyol6VFvRkX/vR+Vc4jQkC+hVqc2pM8ODewa9r"
        crossorigin="anonymous"></script>
<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.min.js"
        integrity="sha384-0pUGZvbkm6XF6gxjEnlmuGrJXVbNuzT9qBBavbLwCsOGabYfZo0T0to5eqruptLy"
        crossorigin="anonymous"></script>
<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha3/dist/js/bootstrap.bundle.min.js"></script>
<script>
	let showToast = "<%= showToast %>";
	let toastMessage = "<%= toastMessage %>";
	if (showToast === "true" && toastMessage.length > 3) {
		Toastify({
			text: toastMessage,
			duration: 3000,
			destination: "/",
			newWindow: true,
			close: true,
			gravity: "top",
			position: "right",
			stopOnFocus: true,
			style: {
				background: "linear-gradient(to right, #00b09b, #96c93d)",
			},
			onClick: function () {

			}
		}).showToast();
	}
	else if (showToast === "false" && toastMessage.length > 3) {
		Toastify({
			text: toastMessage,
			duration: 3000,
			destination: "/",
			newWindow: true,
			close: true,
			gravity: "top",
			position: "right",
			stopOnFocus: true,
			style: {
				background: "linear-gradient(to right, #ff4e50, #f9d423);",
			},
			onClick: function () {

			}
		}).showToast();
	}
	else if (showToast === "alert" && toastMessage.length > 3) {
		Swal.fire(toastMessage);
	}
	else {
		console.log("NO MESSAGE TO SHOW");
	}
</script>

<script>

	function deleteListing(button) {
		const recordId = button.getAttribute("data-id");
		const form = document.getElementById("deleteFormMain");
		form.setAttribute("action", `/${recordId}?_method=DELETE`);
		Swal.fire({
			title: "Are you sure?",
			text: "You won't be able to revert this!",
			icon: "warning",
			showCancelButton: true,
			confirmButtonColor: "#3085d6",
			cancelButtonColor: "#d33",
			confirmButtonText: "Yes, delete it!"
		}).then((result) => {
			if (result.isConfirmed) {
				document.getElementById("deleteFormMain").submit();
			}
		});
	}

</script>

<script>
	let exampleModal = document.getElementById('reviewModal')
	exampleModal.addEventListener('show.bs.modal', function (event) {
		let button = event.relatedTarget;
		let title = button.getAttribute('data-bs-title');
		let id = button.getAttribute('data-bs-id');
		let modalTitle = exampleModal.querySelector('.modal-title');
		modalTitle.textContent = title
		let reviewForm = document.getElementById("reviewForm");
		reviewForm.setAttribute("action", `/review/${id}`);
	});
</script>
<script>
	function initAutocomplete() {
		let autocomplete = new google.maps.places.Autocomplete(document.getElementById("location"));
		autocomplete.addListener("place_changed", function () {
			let place = autocomplete.getPlace();
			if (!place.geometry) {
				return;
			}
			let locationData = {
				name: place.formatted_address,
				latitude: place.geometry.location.lat(),
				longitude: place.geometry.location.lng(),
			};
			console.log("Selected Location:", locationData);
			document.querySelector("#coordinates").value = JSON.stringify(locationData);
		});
	}

	window.onload = initAutocomplete;
</script>
</body>
</html>